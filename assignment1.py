# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15S_APUQq4xpTqU_DMnAcmIqbdG74qac4
"""

from pygam import LinearGAM, s
import pandas as pd

# URLs for the training and test data
train_url = 'https://raw.githubusercontent.com/dustywhite7/econ8310-assignment1/main/assignment_data_train.csv'
test_url = 'https://raw.githubusercontent.com/UNOBusinessForecasting/assignment-01-arima-gam-exponential-smoothing-ols-davis011235/refs/heads/main/assignment_data_test.csv'

# Load the datasets
data = pd.read_csv(train_url)
new_data = pd.read_csv(test_url)

# Extract only relevant columns for the test dataset
new_data = new_data[['month', 'day', 'hour']]

# Prepare training data: features and target variable
x = data[['month', 'day', 'hour']].values  # Convert to NumPy array to avoid slicing issues
y = data['trips'].values  # Convert target variable to NumPy array

# Initialize and fit the GAM model
model = LinearGAM(s(0) + s(1) + s(2))
modelFit = model.gridsearch(x, y)  # Use gridsearch to find the best smoothing parameters

# Ensure the model is a LinearGAM instance before making predictions
if isinstance(model, LinearGAM):
    pred = modelFit.predict(new_data.values)  # Convert test data to NumPy before prediction
else:
    raise ValueError("Model is not a LinearGAM, please check.")

# Print the last 20 predictions for verification
print(pred[-20:])

!pip install pygam