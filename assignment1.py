# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15S_APUQq4xpTqU_DMnAcmIqbdG74qac4
"""

import pandas as pd
from pygam import LinearGAM, s

# Step 1: Load the training and test datasets
url = "https://github.com/dustywhite7/econ8310-assignment1/raw/main/assignment_data_train.csv"
url1 = "https://github.com/dustywhite7/econ8310-assignment1/raw/main/assignment_data_test.csv"
df = pd.read_csv(url)
df_test = pd.read_csv(url1)

# Step 2: Process the Timestamp column to extract time-related features
df['Timestamp'] = pd.to_datetime(df['Timestamp'])
df_test['Timestamp'] = pd.to_datetime(df_test['Timestamp'])

for data in [df, df_test]:
    data['year'] = data['Timestamp'].dt.year
    data['month'] = data['Timestamp'].dt.month
    data['day'] = data['Timestamp'].dt.day
    data['hour'] = data['Timestamp'].dt.hour
    data['day_of_week'] = data['Timestamp'].dt.dayofweek

# Step 3: Prepare the training and test data
# Ensure the columns exist in the correct format
X_train = df[['hour', 'day_of_week', 'month', 'year']]
y_train = df['trips']

X_test = df_test[['hour', 'day_of_week', 'month', 'year']]

# Step 4: Initialize and fit the model (using GridSearch for better results)
model = LinearGAM(s(0) + s(1) + s(2) + s(3))  # Splines for hour, day_of_week, month, and year
modelFit = model.gridsearch(X_train.values, y_train.values)  # Convert to NumPy array for fitting

# Step 5: Make predictions on the test set
pred = modelFit.predict(X_test.values)  # Ensure test set is also converted to NumPy

# Step 6: Save predictions to the test dataframe and CSV file
df_test['trips'] = pred
df_test[['Timestamp', 'trips']].to_csv('taxi_trip_forecast.csv', index=False)

# Print out the first few rows of the test dataframe to verify
print("Number of predictions:", len(pred))
df_test.head()

!pip install pygam